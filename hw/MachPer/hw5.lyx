#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{microtype}
\usepackage[margin=1in]{geometry}
\usepackage{times}
\usepackage{tikz}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "basicstyle={\ttfamily}"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
HW #5
\end_layout

\begin_layout Author
Mo Zhou <mzhou32@jhu.edu>
\end_layout

\begin_layout Section
Problem 1
\end_layout

\begin_layout Standard

\bar under
Assume you are given n 3D points from frame 1 (Xi, Yi, Zi, i= 1, n ) and
 corresponding 3D points (Xi’, Yi’, Zi’, i= 1, n) from frame 2.
 These 3D points related by a rotation matrix R and a 3D translation vector
 T as 
\bar default

\begin_inset Formula 
\[
\begin{bmatrix}X_{i}^{\prime}\\
Y_{i}^{\prime}\\
Z_{i}^{\prime}
\end{bmatrix}=R\begin{bmatrix}X_{i}\\
Y_{i}\\
Z_{i}
\end{bmatrix}+T
\]

\end_inset


\bar under
Derive an algorithm for estimating R and T.
 How many points are needed for producing a solution?
\end_layout

\begin_layout Standard
Let translation vector 
\begin_inset Formula $T=[\Delta x,\Delta y,\Delta z]^{T}$
\end_inset

.
 Let 
\begin_inset Formula $(n_{1},n_{2},n_{3})$
\end_inset

 be the axis of rotation, and 
\begin_inset Formula $\phi_{i}=n_{i}\theta$
\end_inset

 be the angle of rotation.
 The rotation matrix 
\begin_inset Formula $R$
\end_inset

 is
\begin_inset Formula 
\[
R=\begin{bmatrix}n_{1}^{2}+(1-n_{1}^{2})\cos\theta & n_{1}n_{2}(1-\cos\theta)-n_{3}\sin\theta & n_{1}n_{2}(1-\cos\theta)+n_{2}\sin\theta\\
n_{1}n_{2}(1-\cos\theta)+n_{3}\sin\theta & n_{2}^{2}+(1-n_{2}^{2})\cos\theta & n_{2}n_{3}(1-\cos\theta)-n_{1}\sin\theta\\
n_{1}n_{3}(1-\cos\theta)-n_{2}\sin\theta & n_{2}n_{3}(1-\cos\theta)+n_{1}\sin\theta & n_{3}^{2}+(1-n_{3}^{2})\cos\theta
\end{bmatrix}=\begin{bmatrix}r_{1} & r_{2} & r_{3}\\
r_{4} & r_{5} & r_{6}\\
r_{7} & r_{8} & r_{9}
\end{bmatrix}
\]

\end_inset

Relating the two equations, we have
\begin_inset Formula 
\[
X^{\prime}=\frac{x^{\prime}}{z^{\prime}}=\frac{(r_{1}X+r_{2}Y+r_{3})z+\Delta x}{(r_{7}X+r_{8}Y+r_{9})z+\Delta z}\qquad Y^{\prime}=\frac{(r_{4}X+r_{5}Y+r_{6})z+\Delta x}{(r_{7}X+r_{8}Y+r_{9})z+\Delta z}
\]

\end_inset


\end_layout

\begin_layout Standard
We can get 
\begin_inset Formula $z$
\end_inset

 from these two equations and equate them.
 With this result, we can transform the the problem into 
\begin_inset Formula 
\[
[X^{\prime},Y^{\prime},1]E\begin{bmatrix}X\\
Y\\
1
\end{bmatrix}=0
\]

\end_inset

where 
\begin_inset Formula 
\[
E=\begin{bmatrix}\Delta zr_{4}-\Delta yr_{7} & \Delta zr_{5}-\Delta yr_{8} & \Delta zr_{6}-\Delta yr_{9}\\
\Delta xr_{7}-\Delta zr_{1} & \Delta xr_{8}-\Delta zr_{2} & \Delta xr_{9}-\Delta zr_{3}\\
\Delta yr_{1}-\Delta xr_{4} & \Delta yr_{2}-\Delta xr_{5} & \Delta yr_{3}-\Delta xr_{6}
\end{bmatrix}=\begin{bmatrix}e_{1} & e_{2} & e_{3}\\
e_{4} & e_{5} & e_{6}\\
e_{7} & e_{8} & e_{9}
\end{bmatrix}
\]

\end_inset


\end_layout

\begin_layout Standard
After normalizing the matrix 
\begin_inset Formula $E$
\end_inset

 such that 
\begin_inset Formula $e_{9}=1$
\end_inset

, we have 
\begin_inset Formula $8$
\end_inset

 parameters.
 Then we perform SVD on the matrix 
\begin_inset Formula $E=U\Lambda V^{T}$
\end_inset

.
 In this case, there are two solutions for 
\begin_inset Formula $R$
\end_inset

, namely
\begin_inset Formula 
\[
R=U\begin{bmatrix}0 & -1\\
1 & 0\\
 &  & s
\end{bmatrix}V^{T}=U\begin{bmatrix}0 & 1\\
-1 & 0\\
 &  & s
\end{bmatrix}V^{T}
\]

\end_inset

where 
\begin_inset Formula $s=\det(U)\det(V)$
\end_inset

.
 There is only one solution for the translation vector:
\begin_inset Formula 
\[
\begin{bmatrix}\Delta x\\
\Delta y\\
\Delta z
\end{bmatrix}=\alpha\begin{bmatrix}\phi_{1}^{T}\phi_{2}/\phi_{2}^{T}\phi_{3}\\
\phi_{1}^{T}\phi_{2}/\phi_{1}^{T}\phi_{3}\\
1
\end{bmatrix}
\]

\end_inset

where 
\begin_inset Formula $\phi_{i}$
\end_inset

 is the 
\begin_inset Formula $i$
\end_inset

-th row of the matrix 
\begin_inset Formula $E$
\end_inset

, and 
\begin_inset Formula $\alpha$
\end_inset

 is a scaling factor.
 The 
\begin_inset Formula $Z$
\end_inset

 can be obtained from the equations above.
\end_layout

\begin_layout Standard
Next, in order to obtain the matrix 
\begin_inset Formula $E$
\end_inset

, we need 
\begin_inset Formula $8$
\end_inset

 image point correspondences, then we have
\begin_inset Formula 
\[
\begin{bmatrix}X_{1}X_{1}^{\prime} & X_{1}^{\prime}Y_{1} & X_{1}^{\prime} & Y_{1}^{\prime}X_{1} & Y_{1}^{\prime}Y_{1} & Y_{1}^{\prime} & X_{1} & Y_{1}\\
X_{2}X_{2}^{\prime} & X_{2}^{\prime}Y_{2} & X_{2}^{\prime} & Y_{2}^{\prime}X_{2} & Y_{2}^{\prime}Y_{2} & Y_{2}^{\prime} & X_{2} & Y_{2}\\
X_{3}X_{3}^{\prime} & X_{3}^{\prime}Y_{3} & X_{3}^{\prime} & Y_{3}^{\prime}X_{3} & Y_{3}^{\prime}Y_{3} & Y_{3}^{\prime} & X_{3} & Y_{3}\\
X_{4}X_{4}^{\prime} & X_{4}^{\prime}Y_{4} & X_{4}^{\prime} & Y_{4}^{\prime}X_{4} & Y_{4}^{\prime}Y_{4} & Y_{4}^{\prime} & X_{4} & Y_{4}\\
X_{5}X_{5}^{\prime} & X_{5}^{\prime}Y_{5} & X_{5}^{\prime} & Y_{5}^{\prime}X_{5} & Y_{5}^{\prime}Y_{5} & Y_{5}^{\prime} & X_{5} & Y_{5}\\
X_{6}X_{6}^{\prime} & X_{6}^{\prime}Y_{6} & X_{6}^{\prime} & Y_{6}^{\prime}X_{6} & Y_{6}^{\prime}Y_{6} & Y_{6}^{\prime} & X_{6} & Y_{6}\\
X_{7}X_{7}^{\prime} & X_{7}^{\prime}Y_{7} & X_{7}^{\prime} & Y_{7}^{\prime}X_{7} & Y_{7}^{\prime}Y_{7} & Y_{7}^{\prime} & X_{7} & Y_{7}\\
X_{8}X_{8}^{\prime} & X_{8}^{\prime}Y_{8} & X_{8}^{\prime} & Y_{8}^{\prime}X_{8} & Y_{8}^{\prime}Y_{8} & Y_{8}^{\prime} & X_{8} & Y_{8}
\end{bmatrix}\begin{bmatrix}e_{1}\\
e_{2}\\
e_{3}\\
e_{4}\\
e_{5}\\
e_{6}\\
e_{7}\\
e_{8}
\end{bmatrix}=\begin{bmatrix}-1\\
-1\\
-1\\
-1\\
-1\\
-1\\
-1\\
-1
\end{bmatrix}
\]

\end_inset


\end_layout

\begin_layout Standard
For the second question, we need 
\begin_inset Formula $8$
\end_inset

 points.
\end_layout

\begin_layout Section
Problem 2
\end_layout

\begin_layout Standard

\bar under
In edge-based stereo methods, edges in the left image are matched with edges
 in the right image to obtain disparity measurements.
 In this problem, we limit ourselves to matching along a single epipolar
 line, thus reducing the problem to one of matching in one dimension.
\end_layout

\begin_layout Subsection
a
\end_layout

\begin_layout Standard

\bar under
Suppose there are n edges in each image along an epipolar line.
 If each edge has a unique match in the other image, how many different
 mappings are there? Do not include the constraints that edges must be ordered
 the same way in both images.
\end_layout

\begin_layout Standard
Since each edge has a unique match, the number of possible edge matches
 is not 
\begin_inset Formula $n^{n}$
\end_inset

, but the number of permutations 
\begin_inset Formula $n!$
\end_inset

 instead.
\end_layout

\begin_layout Subsection
b
\end_layout

\begin_layout Standard

\bar under
Now add the constraint that edges must be ordered the same way in both images.
 If every edge has a unique match, how many different mappings are there?
\end_layout

\begin_layout Standard
In this case there will be only 
\begin_inset Formula $2$
\end_inset

 possible mappings.
\end_layout

\begin_layout Subsection
c
\end_layout

\begin_layout Standard

\bar under
Now let the right image have m edges (m < n).
 Then n – m of the left edges will be matched with the “null edge”.
 How many different mapping are there if we do not require that order be
 preserved?
\end_layout

\begin_layout Standard
Without preserving the order and the unique matching constraint, the number
 of possible mappings is 
\begin_inset Formula $n^{m}$
\end_inset

.
\end_layout

\begin_layout Subsection
d
\end_layout

\begin_layout Standard

\bar under
Repeat part (c) for the case in which the edges are ordered the same way
 in both images.
\end_layout

\begin_layout Standard
It will be 
\begin_inset Formula $2\times(_{n-m}^{n})=2\times\frac{n!}{(n-m)!(n-(n-m))!}=2\times\frac{n!}{(n-m)!m!}$
\end_inset

 possible mappings.
\end_layout

\begin_layout Section
Problem 3
\end_layout

\begin_layout Standard

\bar under
Formulate the classical shape from shading problem using the variational
 approach assuming that depth values are available at an arbitrary number
 of points.
 Construct the functional to be optimized and then derive the Euler equation.
 Discretize the Euler equation and derive an iterative equation for estimating
 depth.
 State the assumptions you have made.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $i$
\end_inset

 be the angle between the normal and the illumination source, 
\begin_inset Formula $j$
\end_inset

 be the angle between the viewer and the source, and 
\begin_inset Formula $e=i+j$
\end_inset

, the angle between the viewer and the normal.
 Let 
\begin_inset Formula $z(x,y)$
\end_inset

 be the 3D depth map.
 Let 
\begin_inset Formula $p=\frac{\partial z(x,y)}{\partial x}$
\end_inset

 and 
\begin_inset Formula $q=\frac{\partial z(x,y)}{\partial y}$
\end_inset

.
 Then the surface normal is given by 
\begin_inset Formula $[p,q,-1]^{T}$
\end_inset

.
 Let 
\begin_inset Formula $[p_{s},q_{s},-1]^{T}$
\end_inset

 be the vector that points in the direction of the source, and the vector
 
\begin_inset Formula $[0,0,-1]^{T}$
\end_inset

 be the vector in the direction of the viewers.
 
\end_layout

\begin_layout Standard
The relationship between 
\begin_inset Formula $(p,q)$
\end_inset

 and intensity at 
\begin_inset Formula $(x,y)$
\end_inset

, namely the image irradiance equation 
\begin_inset Formula $E(x,y)$
\end_inset

 is written as
\begin_inset Formula 
\[
E(x,y)=R(p,q)=\cos(i)=\frac{1+pp_{s}+qq_{s}}{\sqrt{1+p^{2}+q^{2}}\sqrt{1+p_{s}^{2}+q_{s}^{2}}}
\]

\end_inset


\end_layout

\begin_layout Standard
Given 
\begin_inset Formula $p$
\end_inset

 and 
\begin_inset Formula $q$
\end_inset

, a set of equations is needed to determine 
\begin_inset Formula $z$
\end_inset

.
 In the case of shape from shading, we need the second partials in the Euler
 Lagrange equations to be constrained for the solution to be smooth.
 Hence, the functional should be
\begin_inset Formula 
\[
I_{3}(p,q)=\iint_{\Omega}F(x,y,p,q,p_{x},p_{y},q_{x},q_{y})dxdy
\]

\end_inset

with corresponding Euler-Lagrange equations
\begin_inset Formula 
\[
F_{p}-\frac{\partial}{\partial x}F_{p_{x}}-\frac{\partial}{\partial x}F_{p_{y}}=0\qquad F_{q}-\frac{\partial}{\partial x}F_{q_{x}}-\frac{\partial}{\partial x}F_{q_{y}}=0
\]

\end_inset

And this is a non-linear PDE.
 We now discretize this problem.
 Let 
\begin_inset Formula $\epsilon$
\end_inset

 be the spacing between picture cells.
 Consider an elementary square path with lower left hand corner 
\begin_inset Formula $(i,j)$
\end_inset

, where 
\begin_inset Formula $i$
\end_inset

 corresponds to 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $j$
\end_inset

 corresponds to 
\begin_inset Formula $y$
\end_inset

.
 Then, the integral is approximated by the slope along each of the four
 segments
\begin_inset Formula 
\[
e_{ij}=\frac{\epsilon}{2}[p_{i,j}+p_{i+1,j}+q_{i+1,j}+q_{i+1,j+1}-p_{i+1,j+1}-p_{i,j+1}-q_{i,j+1}-q_{i,j}]
\]

\end_inset

Then we solve the following minimization problem
\begin_inset Formula 
\[
\min\epsilon^{2}\sum_{i=1}^{n}\sum_{j=1}^{m}(E_{ij}-R(p_{ij},q_{ij}))^{2}+\frac{\lambda}{\epsilon^{2}}\sum_{i=1}^{n-1}\sum_{j=1}^{m-1}e_{ij}^{2}
\]

\end_inset

and obtain the following iterative formulation
\begin_inset Formula 
\begin{align*}
p_{ij}^{k+1} & =\bar{p}_{ij}^{k}-\tilde{q}_{ij}^{k}+\frac{\epsilon^{2}}{\lambda}(E_{ij}-R(p_{ij}^{k},q_{ij}^{k}))R_{p}(p_{ij}^{k},q_{ij}^{k})\\
q_{ij}^{k+1} & =\bar{q}_{ij}^{k}-\tilde{p}_{ij}^{k}+\frac{\epsilon^{2}}{\lambda}(E_{ij}-R(p_{ij}^{k},q_{ij}^{k}))R_{q}(p_{ij}^{k},q_{ij}^{k})
\end{align*}

\end_inset

where
\begin_inset Formula 
\begin{align*}
\bar{p}_{ij} & =\frac{1}{4}[(p_{i+1,j+1}-2p_{i+1,j}+p_{i+1,j-1})+2(p_{i,j+1}+p_{i,j-1})+(p_{i-1,j+1}-2p_{i-1,j}+p_{i-1,j-1})]\\
\bar{q}_{ij} & =\frac{1}{4}[(q_{i+1,j+1}-2q_{i+1,j}+q_{i+1,j-1})+2(q_{i,j+1}+q_{i,j-1})+(q_{i-1,j+1}-2q_{i-1,j}+q_{i-1,j-1})]
\end{align*}

\end_inset


\end_layout

\begin_layout Section
Problem 4
\end_layout

\begin_layout Standard

\bar under
Consider a four nodes graph as follows.
 Nodes A1 and A2 are from the same class while nodes B1 and B2 are from
 another class.
 The weights for each edge are shown in the graph.
 Apply the normalized cut algorithm and show the results.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[thick]
\end_layout

\begin_layout Plain Layout


\backslash
filldraw[black] (0,0) circle (2pt) node[anchor=south]{A1};
\end_layout

\begin_layout Plain Layout


\backslash
filldraw[black] (3,0) circle (2pt) node[anchor=south]{B1};
\end_layout

\begin_layout Plain Layout


\backslash
filldraw[black] (0,-1.5) circle (2pt) node[anchor=north]{A2};
\end_layout

\begin_layout Plain Layout


\backslash
filldraw[black] (3,-1.5) circle (2pt) node[anchor=north]{B2};
\end_layout

\begin_layout Plain Layout


\backslash
draw (0,0) -- (3,0) -- (3,-1.5) -- (0,-1.5) -- cycle;
\end_layout

\begin_layout Plain Layout


\backslash
draw (0,0) -- (3,-1.5);
\end_layout

\begin_layout Plain Layout


\backslash
draw (1.5,0) node[anchor=south]{2};
\end_layout

\begin_layout Plain Layout


\backslash
draw (0,-0.75) node[anchor=east]{3};
\end_layout

\begin_layout Plain Layout


\backslash
draw (1.5,-0.75) node[anchor=south west]{2};
\end_layout

\begin_layout Plain Layout


\backslash
draw (3,-0.75) node[anchor=west]{3};
\end_layout

\begin_layout Plain Layout


\backslash
draw (1.5,-1.5) node[anchor=north]{2};
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
According to the PAMI paper, the Ncut problem
\begin_inset Formula 
\[
\text{Ncut}(A,B)=\frac{\text{cut}(A,B)}{\text{assoc}(A,V)}+\frac{\text{cut}(B,A)}{\text{assoc}(B,V)}
\]

\end_inset

is equivalent to the following optimization problem:
\begin_inset Formula 
\[
\min_{x}\text{Ncut}(x)=\min_{y}\frac{y^{T}(D-W)y}{y^{T}Dy}
\]

\end_inset

where 
\begin_inset Formula $y_{i}\in\{1,-b\}$
\end_inset

 and 
\begin_inset Formula $y^{T}D1=0$
\end_inset

.
\end_layout

\begin_layout Standard
To this end, We first sort the four points as [A1, A2, B1, B2] with the
 indicator vector being 
\begin_inset Formula $x=[1,1,-1,-1]^{T}$
\end_inset

.
 Then we have the following weight matrix:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
W=\begin{bmatrix}0 & 3 & 2 & 2\\
3 & 0 & 0 & 2\\
2 & 0 & 0 & 3\\
2 & 2 & 3 & 0
\end{bmatrix}
\]

\end_inset


\end_layout

\begin_layout Standard
Then we let 
\begin_inset Formula $d(i)=\sum_{j}w(i,j)$
\end_inset

, namely for the four points, 
\begin_inset Formula $d=[7,5,5,7]^{T}$
\end_inset

.
 We then convert the vector into a diagonal matrix:
\begin_inset Formula 
\[
D=\begin{bmatrix}7\\
 & 5\\
 &  & 5\\
 &  &  & 7
\end{bmatrix}
\]

\end_inset


\end_layout

\begin_layout Standard
According to the paper, we then calculate the 
\begin_inset Formula $k$
\end_inset

 value.
 Since 
\begin_inset Formula $\sum_{i}d_{i}=24$
\end_inset

, and 
\begin_inset Formula $\sum_{x_{i}>0}d_{i}=12$
\end_inset

, we have 
\begin_inset Formula 
\[
k=\frac{\sum_{x_{i}>0}d_{i}}{\sum_{i}d_{i}}=\frac{12}{24}=\frac{1}{2}
\]

\end_inset


\end_layout

\begin_layout Standard
Following the paper, we let 
\begin_inset Formula $b=\frac{k}{1-k}=\frac{0.5}{1-0.5}=1$
\end_inset

.
 And
\begin_inset Formula 
\begin{align*}
y & =(1+x)-b(1-x)\\
 & =2x\\
 & =[2,2,-2,-2]^{T}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Given these, the matrices for the Ncut problem are ready.
 The optimization problem can be cast as minimizing the following generalized
 eigenvalue system:
\begin_inset Formula 
\[
(D-W)y=\lambda Dy
\]

\end_inset

which can be further transformed into a standard eigensystem and rewritten
 as
\begin_inset Formula 
\[
D^{-\frac{1}{2}}(D-W)D^{-\frac{1}{2}}z=\lambda z
\]

\end_inset

where 
\begin_inset Formula $z=D^{-\frac{1}{2}}y$
\end_inset

.
 We solve the problem using Matlab
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

>> D = diag([7,5,5,7])
\end_layout

\begin_layout Plain Layout

D =
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Diagonal Matrix
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   7   0   0   0
\end_layout

\begin_layout Plain Layout

   0   5   0   0
\end_layout

\begin_layout Plain Layout

   0   0   5   0
\end_layout

\begin_layout Plain Layout

   0   0   0   7
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

>> W = [0,3,2,2;3,0,0,2;2,0,0,3;2,2,3,0]
\end_layout

\begin_layout Plain Layout

W =
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   0   3   2   2
\end_layout

\begin_layout Plain Layout

   3   0   0   2
\end_layout

\begin_layout Plain Layout

   2   0   0   3
\end_layout

\begin_layout Plain Layout

   2   2   3   0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

>> A = D^(-1/2) * (D-W) * D^(-1/2)
\end_layout

\begin_layout Plain Layout

A =
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   1.0000  -0.5071  -0.3381  -0.2857
\end_layout

\begin_layout Plain Layout

  -0.5071   1.0000        0  -0.3381
\end_layout

\begin_layout Plain Layout

  -0.3381        0   1.0000  -0.5071
\end_layout

\begin_layout Plain Layout

  -0.2857  -0.3381  -0.5071   1.0000
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

>> [V, lambda] = eig(A)
\end_layout

\begin_layout Plain Layout

V =
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   0.5401  -0.2977  -0.6414  -0.4564
\end_layout

\begin_layout Plain Layout

   0.4564  -0.6414   0.2977   0.5401
\end_layout

\begin_layout Plain Layout

   0.4564   0.6414  -0.2977   0.5401
\end_layout

\begin_layout Plain Layout

   0.5401   0.2977   0.6414  -0.4564
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

lambda =
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Diagonal Matrix
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  -3.3120e-16            0            0            0
\end_layout

\begin_layout Plain Layout

            0   9.2154e-01            0            0
\end_layout

\begin_layout Plain Layout

            0            0   1.3642e+00            0
\end_layout

\begin_layout Plain Layout

            0            0            0   1.7143e+00
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

>> z1 = V(:,3)
\end_layout

\begin_layout Plain Layout

z1 =
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  -0.6414
\end_layout

\begin_layout Plain Layout

   0.2977
\end_layout

\begin_layout Plain Layout

  -0.2977
\end_layout

\begin_layout Plain Layout

   0.6414
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

>> A * z1
\end_layout

\begin_layout Plain Layout

ans =
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  -0.8750
\end_layout

\begin_layout Plain Layout

   0.4061
\end_layout

\begin_layout Plain Layout

  -0.4061
\end_layout

\begin_layout Plain Layout

   0.8750
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

>> lambda(3,3)*z1
\end_layout

\begin_layout Plain Layout

ans =
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  -0.8750
\end_layout

\begin_layout Plain Layout

   0.4061
\end_layout

\begin_layout Plain Layout

  -0.4061
\end_layout

\begin_layout Plain Layout

   0.8750
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

>> z1
\end_layout

\begin_layout Plain Layout

z1 =
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  -0.6414
\end_layout

\begin_layout Plain Layout

   0.2977
\end_layout

\begin_layout Plain Layout

  -0.2977
\end_layout

\begin_layout Plain Layout

   0.6414
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

>> y1 = D^(1/2) * z1
\end_layout

\begin_layout Plain Layout

y1 =
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  -1.6969
\end_layout

\begin_layout Plain Layout

   0.6657
\end_layout

\begin_layout Plain Layout

  -0.6657
\end_layout

\begin_layout Plain Layout

   1.6969
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Namely, the second smallest eigen vector is 
\begin_inset Formula $z_{1}=[-0.64,0.29,-0.29,0.64]$
\end_inset

.
 The corresponding vector 
\begin_inset Formula $y_{1}=[-1.69,0.66,-0.66,1.69]$
\end_inset

.
 And the corresponding indicator vector is 
\begin_inset Formula $\text{sign}(y_{1})=[-1,1,-1,1]$
\end_inset

.
\end_layout

\begin_layout Standard
This means the resulting groupping is {A1, B1} and {A2, B2}.
\end_layout

\end_body
\end_document
