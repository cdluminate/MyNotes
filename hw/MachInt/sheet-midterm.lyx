#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{microtype}
\usepackage[margin=1in]{geometry}
\usepackage{microtype}
\usepackage{times}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Search (Chap.
 3)
\end_layout

\begin_layout Standard

\series bold
Space and temporal complexity.

\series default
 Drop lower order terms and constant factors.
 Definition of P, NP, NP-Complete, NP-Hard.
\end_layout

\begin_layout Standard

\series bold
Search problem.

\series default
 state space, successor function with action and costs, start state and
 goal test.
\end_layout

\begin_layout Standard

\series bold
State space graph.

\series default
 each state occurs only once.
\end_layout

\begin_layout Standard

\series bold
Search tree.

\series default
 a node is an entire path.
\end_layout

\begin_layout Standard

\series bold
Searching with a search tree.
\end_layout

\begin_layout Standard

\series bold
DFS: depth first search
\series default
 maintains a LIFO stack.
 number of nodes 
\begin_inset Formula $O(b^{d})$
\end_inset

 where 
\begin_inset Formula $b$
\end_inset

 is breadth and 
\begin_inset Formula $d$
\end_inset

 is depth.
 fringe takes 
\begin_inset Formula $O(bd)$
\end_inset

 space.
 it is complete only if there is no cycles.
 it finds the leftmost solution regardless of depth or cost, and is not
 optinal.
\end_layout

\begin_layout Standard

\series bold
BFS: breadth first search
\series default
 maintainers a FIFO queue.
 Let depth of the shallowest solution be 
\begin_inset Formula $d$
\end_inset

.
 Then search time 
\begin_inset Formula $O(b^{d})$
\end_inset

.
 firinge takes 
\begin_inset Formula $O(b^{d})$
\end_inset

 space.
 it is complete becaause 
\begin_inset Formula $d$
\end_inset

 only exists if solution exists.
 it is optimal only if all costs are 1.
\end_layout

\begin_layout Standard

\series bold
cost-sensitive sesarch.

\series default
 introducing costs to the tree.
\end_layout

\begin_layout Standard

\series bold
UCS: uniform cost search.

\series default
 expand cheapest node first.
 fringe is priority queue with cumulative cost.
 if solution costs 
\begin_inset Formula $C$
\end_inset

 and arc costs at least 
\begin_inset Formula $e$
\end_inset

, then the 
\begin_inset Quotes eld
\end_inset

effective depth
\begin_inset Quotes erd
\end_inset

 is roughly 
\begin_inset Formula $C/e$
\end_inset

.
 Which means the time comlexity will be 
\begin_inset Formula $O(b^{C/e})$
\end_inset

.
 fringe takes 
\begin_inset Formula $O(b^{C/e})$
\end_inset

 time complexity, roughly the last tier.
 if we assume the best solution has a finite cost and arc is positive, UCS
 is complete.
 UCS is optimal (can be proven using A*).
 The bad: UCS explores option in every direction and has no information
 about goal location.
\end_layout

\begin_layout Standard

\series bold
search heurisitics.

\series default
 estimates how close a state is to a goal.
\end_layout

\begin_layout Standard

\series bold
GS: greedy search.

\series default
 expand nodes based on heuristics.
 may strightly take you to wrong goal.
 in worst case will look like a badly guided DFS.
\end_layout

\begin_layout Standard

\series bold
IDS: iterative deepening search.

\series default
 combine advantages of DFS and BFS.
 IDS is preferred for large search space where the depth of solution is
 not known.
 complete.
 time 
\begin_inset Formula $O(db^{1}+(d-1)b^{2}+\ldots+b^{d})=O(b^{d})$
\end_inset

, space 
\begin_inset Formula $O(bd)$
\end_inset

.
 optimal if step costs are identical.
\end_layout

\begin_layout Standard

\series bold
Greedy BFS.

\series default
 evaluation function at node 
\begin_inset Formula $n$
\end_inset

 is 
\begin_inset Formula $f(n)=h(n)$
\end_inset

 where 
\begin_inset Formula $h$
\end_inset

 is the heuristic function.
 complete when there is no loop.
 time 
\begin_inset Formula $O(b^{d})$
\end_inset

.
 space 
\begin_inset Formula $O(b^{d})$
\end_inset

.
 not optimal.
\end_layout

\begin_layout Standard

\series bold
A* Search.

\series default
 evaluation function at node 
\begin_inset Formula $n$
\end_inset

 is 
\begin_inset Formula $f(n)=g(n)+h(n)$
\end_inset

 where 
\begin_inset Formula $g$
\end_inset

 is the cumulative cost till 
\begin_inset Formula $n$
\end_inset

.
 Is the combination of UCS and Greedy BFS.
 complete, time sub-exponential, space often exponential.
 is optimal.
\end_layout

\begin_layout Standard

\series bold
heuristics admissibility.

\series default
 
\begin_inset Formula $h(n)\leq h^{*}(n)$
\end_inset

 always less or equal than the true cost.
\end_layout

\begin_layout Standard

\series bold
heuristics consistency.

\series default
 
\begin_inset Formula $f(n)$
\end_inset

 non decreasing.
\end_layout

\begin_layout Standard

\series bold
creating admissible heuristics.
 
\series default
relaxed problem.
 
\end_layout

\begin_layout Section
Adversarial Games (Chap.
 5)
\end_layout

\begin_layout Standard
Hill-climbing search / greedy local search.
\end_layout

\begin_layout Standard
Simulated Annealing.
 (an example of MCMC sampling)
\end_layout

\begin_layout Standard
Local beam search.
 Keep track of K states rather than just one.
 
\end_layout

\begin_layout Standard
Genetic algorithms.
\end_layout

\begin_layout Standard
Minimax algorithm (implemented as DFS).
 deep look ahead (no efficient).
 good heuristic function (not dealing with delayed effects).
 compute each node's minimax value: the best achievable utility against
 a rational adversary.
 time 
\begin_inset Formula $O(b^{d})$
\end_inset

, space 
\begin_inset Formula $O(bd)$
\end_inset

.
\end_layout

\begin_layout Standard
Minimax pruning.
 alpha-best pruning, where a is known best for MAX, b is the known best
 for MIN so far.
\end_layout

\begin_layout Standard
Evaluation function and backing up values.
\end_layout

\begin_layout Standard
Expectimax search.
\end_layout

\begin_layout Section
CSP
\end_layout

\begin_layout Standard
CSP: a set of vars, set of possible values and set of constraints.
\end_layout

\begin_layout Standard
backtrack search.
 DFS with (1) one variable at a time; (2) check constraints as you go.
\end_layout

\begin_layout Standard
filtering: forward checking.
 track remaining legal values and terminate when any variable has no legal
 value.
\end_layout

\begin_layout Standard
arc consistency.
 for every value x of X there is some allowed y.
\end_layout

\begin_layout Standard
k-consistency.
\end_layout

\begin_layout Standard
ordering.
\end_layout

\begin_layout Standard
structure.
\end_layout

\begin_layout Section
Bayes Net (Chap.
 13)
\end_layout

\begin_layout Standard
random variables
\end_layout

\begin_layout Standard
joint and marginal distributions
\end_layout

\begin_layout Standard
conditional distribution
\end_layout

\begin_layout Standard
product rule, chain rule, bayes' rule
\end_layout

\begin_layout Standard
inference: compute a desired probability from other known probabilities.
 e.g.
 conditional from joint.
\end_layout

\begin_layout Standard
independence: p(x,y)=p(x)p(y) or p(x|y)=p(x)
\end_layout

\begin_layout Standard
conditinal independence
\end_layout

\begin_layout Standard
bayes nets (graphical model).
\end_layout

\begin_layout Standard
bayes net inference.
 (normalization trick for 
\begin_inset Formula $P(B|j,m)=\alpha P(B,j,m)$
\end_inset

.
\end_layout

\begin_layout Standard
inference by enumeration.
\end_layout

\begin_layout Section
HMM (Chap.
 14)
\end_layout

\end_body
\end_document
